{
  "summary": {
    "total_backtests": 47,
    "successful_backtests": 44,
    "failed_backtests": 3,
    "timestamp": "2025-08-17T08:21:02.597867"
  },
  "failed_backtests": [
    {
      "symbol": "AAPU",
      "error": "Backtest failed: LEAN CLI failed: Package source with Name: Package source 1 added successfully.\nThe template \"Solution File\" was created successfully.\n\nThe template \"Class Library\" was created successfully.\n\n  Determining projects to restore...\n  Writing /tmp/tmpa00Iz7.tmp\ninfo : X.509 certificate chain validation will use the fallback certificate \nbundle at '/usr/lib/dotnet/sdk/9.0.101/trustedroots/codesignctl.pem'.\ninfo : X.509 certificate chain validation will use the fallback certificate \nbundle at '/usr/lib/dotnet/sdk/9.0.101/trustedroots/timestampctl.pem'.\ninfo : Adding PackageReference for package \n'QuantConnect.Lean.DataSource.Polygon' into project \n'/ModulesProject/ModulesProject.csproj'.\ninfo : Restoring packages for /ModulesProject/ModulesProject.csproj...\ninfo : Installed QuantConnect.Lean.DataSource.Polygon 2.5.17255 from /Modules to\n/root/.nuget/packages/quantconnect.lean.datasource.polygon/2.5.17255 with \ncontent hash \nxN5quMxsZBn4L04s8B397zADiBxZZNA9lvpI5aEauK1lpWjY1f+wVx9C9BaRsarhlYTxogiWWjsiW4p+\n7R2dqA==.\ninfo :   GET https://api.nuget.org/v3/vulnerabilities/index.json\ninfo :   OK https://api.nuget.org/v3/vulnerabilities/index.json 37ms\ninfo :   GET \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/vulnerability.base.\njson\ninfo :   GET \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/2025.08.16.23.18.14\n/vulnerability.update.json\ninfo :   OK \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/vulnerability.base.\njson 15ms\ninfo :   OK \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/2025.08.16.23.18.14\n/vulnerability.update.json 62ms\ninfo : Package 'QuantConnect.Lean.DataSource.Polygon' is compatible with all the\nspecified frameworks in project '/ModulesProject/ModulesProject.csproj'.\ninfo : PackageReference for package 'QuantConnect.Lean.DataSource.Polygon' \nversion '2.5.17255' added to file '/ModulesProject/ModulesProject.csproj'.\ninfo : Generating MSBuild file \n/Compile/obj/ModulesProject/ModulesProject.csproj.nuget.g.props.\ninfo : Generating MSBuild file \n/Compile/obj/ModulesProject/ModulesProject.csproj.nuget.g.targets.\ninfo : Writing assets file to disk. Path: \n/Compile/obj/ModulesProject/project.assets.json\nlog  : Restored /ModulesProject/ModulesProject.csproj (in 1.82 sec).\n20250817 08:20:08.622 TRACE:: Config.Get(): Configuration key not found. Key: \nversion-id - Using default value:\n20250817 08:20:08.644 TRACE:: Config.Get(): Configuration key not found. Key: \ncache-location - Using default value:\n20250817 08:20:08.648 TRACE:: Config.Get(): Configuration key not found. Key: \napi-url - Using default value: https://www.quantconnect.com/api/v2/\n20250817 08:20:08.649 TRACE:: Config.Get(): Configuration key not found. Key: \nplugin-directory - Using default value:\n20250817 08:20:08.658 TRACE:: Composer(): Loading Assemblies from \n/Lean/Launcher/bin/Debug\n20250817 08:20:08.930 TRACE:: Python for .NET Assembly: Python.Runtime, \nVersion=2.0.48.0, Culture=neutral, PublicKeyToken=5000fea6cba702dd\n20250817 08:20:09.162 TRACE:: Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE \nv2.5.0.0 Mode: DEBUG (64bit) Host: the-ultimate\n20250817 08:20:09.211 TRACE:: Engine.Main(): Started 8:20 AM\n20250817 08:20:09.219 TRACE:: Config.Get(): Configuration key not found. Key: \nlean-manager-type - Using default value: LocalLeanManager\n20250817 08:20:09.391 TRACE:: JobQueue.NextJob(): Selected /LeanCLI/main.py\n20250817 08:20:09.721 TRACE:: Config.GetValue(): \nscheduled-event-leaky-bucket-capacity - Using default value: 120\n20250817 08:20:09.721 TRACE:: Config.GetValue(): \nscheduled-event-leaky-bucket-time-interval-minutes - Using default value: 1440\n20250817 08:20:09.721 TRACE:: Config.GetValue(): \nscheduled-event-leaky-bucket-refill-amount - Using default value: 18\n20250817 08:20:09.723 TRACE:: Config.GetValue(): storage-limit - Using default \nvalue: 10737418240\n20250817 08:20:09.724 TRACE:: Config.GetValue(): storage-permissions - Using \ndefault value: Read=True Write=True Delete=True\n20250817 08:20:09.724 TRACE:: Config.Get(): Configuration key not found. Key: \noptimization-id - Using default value:\n20250817 08:20:09.724 TRACE:: Config.Get(): Configuration key not found. Key: \nbacktest-name - Using default value: local\n20250817 08:20:09.728 TRACE:: Config.Get(): Configuration key not found. Key: \ndata-channel - Using default value:\n20250817 08:20:09.728 TRACE:: Config.Get(): Configuration key not found. Key: \npython-venv - Using default value:\n20250817 08:20:09.740 TRACE:: Config.Get(): Configuration key not found. Key: \nout-of-sample-max-end-date - Using default value:\n20250817 08:20:09.763 TRACE:: Config.GetValue(): out-of-sample-days - Using \ndefault value: 0\n20250817 08:20:09.765 TRACE:: Config.Get(): Configuration key not found. Key: \ndata-permission-manager - Using default value: DataPermissionManager\n20250817 08:20:09.770 TRACE:: Config.Get(): Configuration key not found. Key: \ndata-monitor - Using default value: QuantConnect.Data.DataMonitor\n20250817 08:20:09.861 TRACE:: Config.GetValue(): algorithm-creation-timeout - \nUsing default value: 90\n20250817 08:20:09.909 TRACE:: Config.GetValue(): downloader-data-update-period -\nUsing default value: 7\nUnhandled exception. System.Reflection.TargetInvocationException: Exception has \nbeen thrown by the target of an invocation.\n ---> System.ArgumentException: Unable to locate any exports matching the \nrequested typeName: QuantConnect.Lean.DataSource.Polygon.PolygonDataDownloader. \nType: QuantConnect.IDataDownloader (Parameter 'typeName')\n   at QuantConnect.Util.Composer.GetExportedValueByTypeName[T](String typeName, \nBoolean forceTypeNameOnExisting) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Common/Util/Composer.cs:\nline 326\n   at QuantConnect.Lean.Engine.DataFeeds.DownloaderDataProvider..ctor() in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Engine/DataFeeds/Downloa\nderDataProvider.cs:line 58\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean \nwrapExceptions)\n   --- End of inner exception stack trace ---\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean \nwrapExceptions)\n   at QuantConnect.Util.Composer.GetExportedValueByTypeName[T](String typeName, \nBoolean forceTypeNameOnExisting) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Common/Util/Composer.cs:\nline 302\n   at \nQuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(Composer \ncomposer, Boolean researchMode) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Engine/LeanEngineAlgorit\nhmHandlers.cs:line 214\n   at QuantConnect.Lean.Engine.Initializer.GetAlgorithmHandlers(Boolean \nresearchMode) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Engine/Initializer.cs:li\nne 78\n   at QuantConnect.Lean.Launcher.Program.Main(String[] args) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Launcher/Program.cs:line\n69\nError: Something went wrong while running 'MarketStructure' in the 'backtesting'\nenvironment, the output is stored in \n'MarketStructure/backtests/2025-08-17_08-19-55_fd7bb11f'\n"
    },
    {
      "symbol": "APLD",
      "error": "Backtest failed: LEAN CLI failed: Package source with Name: Package source 1 added successfully.\nThe template \"Solution File\" was created successfully.\n\nThe template \"Class Library\" was created successfully.\n\n  Determining projects to restore...\n  Writing /tmp/tmpaYXYp0.tmp\ninfo : X.509 certificate chain validation will use the fallback certificate \nbundle at '/usr/lib/dotnet/sdk/9.0.101/trustedroots/codesignctl.pem'.\ninfo : X.509 certificate chain validation will use the fallback certificate \nbundle at '/usr/lib/dotnet/sdk/9.0.101/trustedroots/timestampctl.pem'.\ninfo : Adding PackageReference for package \n'QuantConnect.Lean.DataSource.Polygon' into project \n'/ModulesProject/ModulesProject.csproj'.\ninfo : Restoring packages for /ModulesProject/ModulesProject.csproj...\ninfo : Installed QuantConnect.Lean.DataSource.Polygon 2.5.17255 from /Modules to\n/root/.nuget/packages/quantconnect.lean.datasource.polygon/2.5.17255 with \ncontent hash \nxN5quMxsZBn4L04s8B397zADiBxZZNA9lvpI5aEauK1lpWjY1f+wVx9C9BaRsarhlYTxogiWWjsiW4p+\n7R2dqA==.\ninfo :   GET https://api.nuget.org/v3/vulnerabilities/index.json\ninfo :   OK https://api.nuget.org/v3/vulnerabilities/index.json 23ms\ninfo :   GET \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/vulnerability.base.\njson\ninfo :   GET \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/2025.08.16.23.18.14\n/vulnerability.update.json\ninfo :   OK \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/vulnerability.base.\njson 14ms\ninfo :   OK \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/2025.08.16.23.18.14\n/vulnerability.update.json 36ms\ninfo : Package 'QuantConnect.Lean.DataSource.Polygon' is compatible with all the\nspecified frameworks in project '/ModulesProject/ModulesProject.csproj'.\ninfo : PackageReference for package 'QuantConnect.Lean.DataSource.Polygon' \nversion '2.5.17255' added to file '/ModulesProject/ModulesProject.csproj'.\ninfo : Generating MSBuild file \n/Compile/obj/ModulesProject/ModulesProject.csproj.nuget.g.props.\ninfo : Generating MSBuild file \n/Compile/obj/ModulesProject/ModulesProject.csproj.nuget.g.targets.\ninfo : Writing assets file to disk. Path: \n/Compile/obj/ModulesProject/project.assets.json\nlog  : Restored /ModulesProject/ModulesProject.csproj (in 1.42 sec).\n20250817 08:20:13.817 TRACE:: Config.Get(): Configuration key not found. Key: \nversion-id - Using default value:\n20250817 08:20:13.827 TRACE:: Config.Get(): Configuration key not found. Key: \ncache-location - Using default value:\n20250817 08:20:13.832 TRACE:: Config.Get(): Configuration key not found. Key: \napi-url - Using default value: https://www.quantconnect.com/api/v2/\n20250817 08:20:13.833 TRACE:: Config.Get(): Configuration key not found. Key: \nplugin-directory - Using default value:\n20250817 08:20:13.837 TRACE:: Composer(): Loading Assemblies from \n/Lean/Launcher/bin/Debug\n20250817 08:20:14.036 TRACE:: Python for .NET Assembly: Python.Runtime, \nVersion=2.0.48.0, Culture=neutral, PublicKeyToken=5000fea6cba702dd\n20250817 08:20:14.149 TRACE:: Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE \nv2.5.0.0 Mode: DEBUG (64bit) Host: the-ultimate\n20250817 08:20:14.176 TRACE:: Engine.Main(): Started 8:20 AM\n20250817 08:20:14.190 TRACE:: Config.Get(): Configuration key not found. Key: \nlean-manager-type - Using default value: LocalLeanManager\n20250817 08:20:14.311 TRACE:: JobQueue.NextJob(): Selected /LeanCLI/main.py\n20250817 08:20:14.585 TRACE:: Config.GetValue(): \nscheduled-event-leaky-bucket-capacity - Using default value: 120\n20250817 08:20:14.586 TRACE:: Config.GetValue(): \nscheduled-event-leaky-bucket-time-interval-minutes - Using default value: 1440\n20250817 08:20:14.587 TRACE:: Config.GetValue(): \nscheduled-event-leaky-bucket-refill-amount - Using default value: 18\n20250817 08:20:14.589 TRACE:: Config.GetValue(): storage-limit - Using default \nvalue: 10737418240\n20250817 08:20:14.594 TRACE:: Config.GetValue(): storage-permissions - Using \ndefault value: Read=True Write=True Delete=True\n20250817 08:20:14.595 TRACE:: Config.Get(): Configuration key not found. Key: \noptimization-id - Using default value:\n20250817 08:20:14.596 TRACE:: Config.Get(): Configuration key not found. Key: \nbacktest-name - Using default value: local\n20250817 08:20:14.600 TRACE:: Config.Get(): Configuration key not found. Key: \ndata-channel - Using default value:\n20250817 08:20:14.602 TRACE:: Config.Get(): Configuration key not found. Key: \npython-venv - Using default value:\n20250817 08:20:14.605 TRACE:: Config.Get(): Configuration key not found. Key: \nout-of-sample-max-end-date - Using default value:\n20250817 08:20:14.605 TRACE:: Config.GetValue(): out-of-sample-days - Using \ndefault value: 0\n20250817 08:20:14.608 TRACE:: Config.Get(): Configuration key not found. Key: \ndata-permission-manager - Using default value: DataPermissionManager\n20250817 08:20:14.608 TRACE:: Config.Get(): Configuration key not found. Key: \ndata-monitor - Using default value: QuantConnect.Data.DataMonitor\n20250817 08:20:14.645 TRACE:: Config.GetValue(): algorithm-creation-timeout - \nUsing default value: 90\n20250817 08:20:14.671 TRACE:: Config.GetValue(): downloader-data-update-period -\nUsing default value: 7\nUnhandled exception. System.Reflection.TargetInvocationException: Exception has \nbeen thrown by the target of an invocation.\n ---> System.ArgumentException: Unable to locate any exports matching the \nrequested typeName: QuantConnect.Lean.DataSource.Polygon.PolygonDataDownloader. \nType: QuantConnect.IDataDownloader (Parameter 'typeName')\n   at QuantConnect.Util.Composer.GetExportedValueByTypeName[T](String typeName, \nBoolean forceTypeNameOnExisting) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Common/Util/Composer.cs:\nline 326\n   at QuantConnect.Lean.Engine.DataFeeds.DownloaderDataProvider..ctor() in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Engine/DataFeeds/Downloa\nderDataProvider.cs:line 58\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean \nwrapExceptions)\n   --- End of inner exception stack trace ---\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean \nwrapExceptions)\n   at QuantConnect.Util.Composer.GetExportedValueByTypeName[T](String typeName, \nBoolean forceTypeNameOnExisting) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Common/Util/Composer.cs:\nline 302\n   at \nQuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(Composer \ncomposer, Boolean researchMode) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Engine/LeanEngineAlgorit\nhmHandlers.cs:line 214\n   at QuantConnect.Lean.Engine.Initializer.GetAlgorithmHandlers(Boolean \nresearchMode) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Engine/Initializer.cs:li\nne 78\n   at QuantConnect.Lean.Launcher.Program.Main(String[] args) in \n/LeanCloud/CI.Builder/bin/Release/src/QuantConnect/Lean/Launcher/Program.cs:line\n69\nError: Something went wrong while running 'MarketStructure' in the 'backtesting'\nenvironment, the output is stored in \n'MarketStructure/backtests/2025-08-17_08-20-02_0b088f8d'\n"
    },
    {
      "symbol": "GLOB",
      "error": "Backtest failed: LEAN CLI failed: Package source with Name: Package source 1 added successfully.\nThe template \"Solution File\" was created successfully.\n\nThe template \"Class Library\" was created successfully.\n\n  Determining projects to restore...\n  Writing /tmp/tmpjyjbND.tmp\ninfo : X.509 certificate chain validation will use the fallback certificate \nbundle at '/usr/lib/dotnet/sdk/9.0.101/trustedroots/codesignctl.pem'.\ninfo : X.509 certificate chain validation will use the fallback certificate \nbundle at '/usr/lib/dotnet/sdk/9.0.101/trustedroots/timestampctl.pem'.\ninfo : Adding PackageReference for package \n'QuantConnect.Lean.DataSource.Polygon' into project \n'/ModulesProject/ModulesProject.csproj'.\ninfo : Restoring packages for /ModulesProject/ModulesProject.csproj...\ninfo : Installed QuantConnect.Lean.DataSource.Polygon 2.5.17255 from /Modules to\n/root/.nuget/packages/quantconnect.lean.datasource.polygon/2.5.17255 with \ncontent hash \nxN5quMxsZBn4L04s8B397zADiBxZZNA9lvpI5aEauK1lpWjY1f+wVx9C9BaRsarhlYTxogiWWjsiW4p+\n7R2dqA==.\ninfo :   GET https://api.nuget.org/v3/vulnerabilities/index.json\ninfo :   OK https://api.nuget.org/v3/vulnerabilities/index.json 12ms\ninfo :   GET \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/vulnerability.base.\njson\ninfo :   GET \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/2025.08.16.23.18.14\n/vulnerability.update.json\ninfo :   OK \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/vulnerability.base.\njson 12ms\ninfo :   OK \nhttps://api.nuget.org/v3-vulnerabilities/2025.07.31.17.40.39/2025.08.16.23.18.14\n/vulnerability.update.json 26ms\nerror: Could not find a part of the path \n'/root/.nuget/packages/quantconnect.lean.datasource.polygon/2.5.17255'.\nError: Something went wrong while running 'MarketStructure' in the 'backtesting'\nenvironment, the output is stored in \n'MarketStructure/backtests/2025-08-17_08-20-22_968d201f'\n"
    }
  ],
  "individual_results": [
    {
      "total_return": 0.29,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 2.564,
      "average_win": 1286.7,
      "average_loss": 501.84,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100285.995,
      "net_profit": 285.99499999999534,
      "symbol": "ALGN"
    },
    {
      "total_return": -1.37,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 66.67,
      "total_trades": 3,
      "profit_factor": 0.6311,
      "average_win": 499.405,
      "average_loss": 1582.56,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98626.69,
      "net_profit": -1373.3099999999977,
      "symbol": "ALKT"
    },
    {
      "total_return": 1.03,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 4,
      "profit_factor": 2.8135,
      "average_win": 743.78,
      "average_loss": 264.365,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101031.2456,
      "net_profit": 1031.2455999999947,
      "symbol": "AMZU"
    },
    {
      "total_return": 0.21,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 4,
      "profit_factor": 1.3221,
      "average_win": 663.445,
      "average_loss": 501.82,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100212.1516,
      "net_profit": 212.15159999999742,
      "symbol": "AMZZ"
    },
    {
      "total_return": -2.89,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.4583,
      "average_win": 1641.26,
      "average_loss": 1790.43,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97111.3812,
      "net_profit": -2888.6187999999966,
      "symbol": "AUR"
    },
    {
      "total_return": -0.41,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 1013.87,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99589.84,
      "net_profit": -410.1600000000035,
      "symbol": "BCRX"
    },
    {
      "total_return": -0.47,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.3525,
      "average_win": 482.22,
      "average_loss": 684.09,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99531.29,
      "net_profit": -468.7100000000064,
      "symbol": "BE"
    },
    {
      "total_return": -2.3,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 16.669999999999998,
      "total_trades": 6,
      "profit_factor": 0.039,
      "average_win": 94.54,
      "average_loss": 484.39,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97697.19,
      "net_profit": -2302.8099999999977,
      "symbol": "BJRI"
    },
    {
      "total_return": -3.33,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 1435.67,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 96670.38,
      "net_profit": -3329.6199999999953,
      "symbol": "CONL"
    },
    {
      "total_return": 0.86,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 661.5,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100864.0,
      "net_profit": 864.0,
      "symbol": "CRWV"
    },
    {
      "total_return": 0.07,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 1,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 59.18,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100072.105,
      "net_profit": 72.10499999999593,
      "symbol": "EWY"
    },
    {
      "total_return": 1.6,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 3.1715,
      "average_win": 1501.0,
      "average_loss": 473.28,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101603.445,
      "net_profit": 1603.445000000007,
      "symbol": "FBL"
    },
    {
      "total_return": -1.2,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 4,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 352.79,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98799.765,
      "net_profit": -1200.2350000000006,
      "symbol": "FHI"
    },
    {
      "total_return": -1.36,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.1736,
      "average_win": 261.66,
      "average_loss": 753.66,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98640.64,
      "net_profit": -1359.3600000000006,
      "symbol": "FIVN"
    },
    {
      "total_return": -3.27,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.0036,
      "average_win": 13.01,
      "average_loss": 904.9825,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 96731.1999,
      "net_profit": -3268.800099999993,
      "symbol": "FRPT"
    },
    {
      "total_return": -1.69,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.177,
      "average_win": 169.56,
      "average_loss": 239.455,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98313.6917,
      "net_profit": -1686.3083000000042,
      "symbol": "FVRR"
    },
    {
      "total_return": 0.47,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 1829.91,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100465.32,
      "net_profit": 465.320000000007,
      "symbol": "IDCC"
    },
    {
      "total_return": -4.24,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 6,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 766.5033,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 95755.0433,
      "net_profit": -4244.956699999995,
      "symbol": "IDXX"
    },
    {
      "total_return": -1.02,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.6626,
      "average_win": 518.8,
      "average_loss": 391.485,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98984.01,
      "net_profit": -1015.9900000000052,
      "symbol": "INTW"
    },
    {
      "total_return": 3.45,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 10.0,
      "average_win": 3131.14,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 103446.885,
      "net_profit": 3446.8849999999948,
      "symbol": "LENZ"
    },
    {
      "total_return": 0.75,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 339.9,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100749.585,
      "net_profit": 749.5850000000064,
      "symbol": "LOGI"
    },
    {
      "total_return": 2.62,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 102620.795,
      "net_profit": 2620.7949999999983,
      "symbol": "METU"
    },
    {
      "total_return": -0.08,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 229.19,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99919.32,
      "net_profit": -80.67999999999302,
      "symbol": "MTZ"
    },
    {
      "total_return": 0.65,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 1,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 240.08,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100645.215,
      "net_profit": 645.2149999999965,
      "symbol": "NATL"
    },
    {
      "total_return": -2.02,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 4,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 538.6325,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97980.61,
      "net_profit": -2019.3899999999994,
      "symbol": "NET"
    },
    {
      "total_return": -0.97,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.0889,
      "average_win": 118.48,
      "average_loss": 666.14,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99030.94,
      "net_profit": -969.0599999999977,
      "symbol": "PCOR"
    },
    {
      "total_return": 0.9,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 21.54,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100904.04,
      "net_profit": 904.0399999999936,
      "symbol": "PWP"
    },
    {
      "total_return": -4.75,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 25.0,
      "total_trades": 4,
      "profit_factor": 0.6308,
      "average_win": 3978.94,
      "average_loss": 2102.6,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 95253.7,
      "net_profit": -4746.300000000003,
      "symbol": "RDTL"
    },
    {
      "total_return": -1.48,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 3,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 352.79,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98518.495,
      "net_profit": -1481.5050000000047,
      "symbol": "SITC"
    },
    {
      "total_return": 0.62,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 141.52,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100621.9627,
      "net_profit": 621.9627000000037,
      "symbol": "SIXG"
    },
    {
      "total_return": 0.89,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.2767,
      "average_win": 635.76,
      "average_loss": 1148.7,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100886.8878,
      "net_profit": 886.8877999999968,
      "symbol": "SOFX"
    },
    {
      "total_return": 0.8,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 25.0,
      "total_trades": 4,
      "profit_factor": 0.0527,
      "average_win": 73.71,
      "average_loss": 466.43,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100798.76,
      "net_profit": 798.7599999999948,
      "symbol": "STRL"
    },
    {
      "total_return": -0.28,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 566.2,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99717.46,
      "net_profit": -282.5399999999936,
      "symbol": "SVIX"
    },
    {
      "total_return": -0.94,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.2933,
      "average_win": 213.21,
      "average_loss": 363.48,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99064.365,
      "net_profit": -935.6349999999948,
      "symbol": "TECL"
    },
    {
      "total_return": -0.71,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 66.67,
      "total_trades": 3,
      "profit_factor": 0.5265,
      "average_win": 255.745,
      "average_loss": 971.52,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99293.4674,
      "net_profit": -706.5326000000059,
      "symbol": "TMDX"
    },
    {
      "total_return": -0.32,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.3522,
      "average_win": 255.79,
      "average_loss": 363.085,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99682.5541,
      "net_profit": -317.4459000000061,
      "symbol": "TQQQ"
    },
    {
      "total_return": -0.43,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.4008,
      "average_win": 182.67,
      "average_loss": 227.91,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 99568.0756,
      "net_profit": -431.9244000000035,
      "symbol": "TTMI"
    },
    {
      "total_return": 4.1,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 1,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 285.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 104102.7244,
      "net_profit": 4102.724400000006,
      "symbol": "USAR"
    },
    {
      "total_return": 1.84,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 675.54,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101837.65,
      "net_profit": 1837.6499999999942,
      "symbol": "VFC"
    },
    {
      "total_return": 0.46,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 1.5271,
      "average_win": 1856.1,
      "average_loss": 1215.48,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100463.164,
      "net_profit": 463.1640000000043,
      "symbol": "AGX"
    },
    {
      "total_return": -2.41,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.1935,
      "average_win": 686.8,
      "average_loss": 887.385,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97586.17,
      "net_profit": -2413.8300000000017,
      "symbol": "APPX"
    },
    {
      "total_return": 1.34,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 2.7675,
      "average_win": 1188.2,
      "average_loss": 429.34,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101338.045,
      "net_profit": 1338.0449999999983,
      "symbol": "AU"
    },
    {
      "total_return": 3.15,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 12.5402,
      "average_win": 1666.09,
      "average_loss": 132.86,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 103152.251,
      "net_profit": 3152.251000000004,
      "symbol": "VSAT"
    },
    {
      "total_return": -3.63,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.1131,
      "average_win": 395.49,
      "average_loss": 874.1825,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 96366.595,
      "net_profit": -3633.404999999999,
      "symbol": "WEAV"
    }
  ],
  "aggregate_statistics": {
    "average_return": -0.3515909090909091,
    "median_return": -0.30000000000000004,
    "std_dev_return": 1.9716100647332104,
    "min_return": -4.75,
    "max_return": 4.1,
    "average_sharpe": 0.0,
    "average_max_drawdown": 0.0,
    "average_win_rate": 35.90863636363636,
    "total_trades_all": 123,
    "average_trades_per_symbol": 2.7954545454545454
  },
  "top_performers": [
    {
      "total_return": 4.1,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 1,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 285.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 104102.7244,
      "net_profit": 4102.724400000006,
      "symbol": "USAR"
    },
    {
      "total_return": 3.45,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 10.0,
      "average_win": 3131.14,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 103446.885,
      "net_profit": 3446.8849999999948,
      "symbol": "LENZ"
    },
    {
      "total_return": 3.15,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 12.5402,
      "average_win": 1666.09,
      "average_loss": 132.86,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 103152.251,
      "net_profit": 3152.251000000004,
      "symbol": "VSAT"
    },
    {
      "total_return": 2.62,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 102620.795,
      "net_profit": 2620.7949999999983,
      "symbol": "METU"
    },
    {
      "total_return": 1.84,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 675.54,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101837.65,
      "net_profit": 1837.6499999999942,
      "symbol": "VFC"
    },
    {
      "total_return": 1.6,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 3.1715,
      "average_win": 1501.0,
      "average_loss": 473.28,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101603.445,
      "net_profit": 1603.445000000007,
      "symbol": "FBL"
    },
    {
      "total_return": 1.34,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 2,
      "profit_factor": 2.7675,
      "average_win": 1188.2,
      "average_loss": 429.34,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101338.045,
      "net_profit": 1338.0449999999983,
      "symbol": "AU"
    },
    {
      "total_return": 1.03,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 50.0,
      "total_trades": 4,
      "profit_factor": 2.8135,
      "average_win": 743.78,
      "average_loss": 264.365,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 101031.2456,
      "net_profit": 1031.2455999999947,
      "symbol": "AMZU"
    },
    {
      "total_return": 0.9,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 100.0,
      "total_trades": 1,
      "profit_factor": 10.0,
      "average_win": 21.54,
      "average_loss": 0.0,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100904.04,
      "net_profit": 904.0399999999936,
      "symbol": "PWP"
    },
    {
      "total_return": 0.89,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.2767,
      "average_win": 635.76,
      "average_loss": 1148.7,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 100886.8878,
      "net_profit": 886.8877999999968,
      "symbol": "SOFX"
    }
  ],
  "worst_performers": [
    {
      "total_return": -1.69,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.177,
      "average_win": 169.56,
      "average_loss": 239.455,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 98313.6917,
      "net_profit": -1686.3083000000042,
      "symbol": "FVRR"
    },
    {
      "total_return": -2.02,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 4,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 538.6325,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97980.61,
      "net_profit": -2019.3899999999994,
      "symbol": "NET"
    },
    {
      "total_return": -2.3,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 16.669999999999998,
      "total_trades": 6,
      "profit_factor": 0.039,
      "average_win": 94.54,
      "average_loss": 484.39,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97697.19,
      "net_profit": -2302.8099999999977,
      "symbol": "BJRI"
    },
    {
      "total_return": -2.41,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.1935,
      "average_win": 686.8,
      "average_loss": 887.385,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97586.17,
      "net_profit": -2413.8300000000017,
      "symbol": "APPX"
    },
    {
      "total_return": -2.89,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 33.33,
      "total_trades": 3,
      "profit_factor": 0.4583,
      "average_win": 1641.26,
      "average_loss": 1790.43,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 97111.3812,
      "net_profit": -2888.6187999999966,
      "symbol": "AUR"
    },
    {
      "total_return": -3.27,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.0036,
      "average_win": 13.01,
      "average_loss": 904.9825,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 96731.1999,
      "net_profit": -3268.800099999993,
      "symbol": "FRPT"
    },
    {
      "total_return": -3.33,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 2,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 1435.67,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 96670.38,
      "net_profit": -3329.6199999999953,
      "symbol": "CONL"
    },
    {
      "total_return": -3.63,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 20.0,
      "total_trades": 5,
      "profit_factor": 0.1131,
      "average_win": 395.49,
      "average_loss": 874.1825,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 96366.595,
      "net_profit": -3633.404999999999,
      "symbol": "WEAV"
    },
    {
      "total_return": -4.24,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 0.0,
      "total_trades": 6,
      "profit_factor": 0.0,
      "average_win": 0.0,
      "average_loss": 766.5033,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 95755.0433,
      "net_profit": -4244.956699999995,
      "symbol": "IDXX"
    },
    {
      "total_return": -4.75,
      "sharpe_ratio": 0.0,
      "max_drawdown": 0.0,
      "win_rate": 25.0,
      "total_trades": 4,
      "profit_factor": 0.6308,
      "average_win": 3978.94,
      "average_loss": 2102.6,
      "compounding_annual_return": 0.0,
      "volatility": 0.0,
      "start_equity": 100000.0,
      "end_equity": 95253.7,
      "net_profit": -4746.300000000003,
      "symbol": "RDTL"
    }
  ],
  "return_distribution": {
    "profitable_count": 20,
    "unprofitable_count": 24,
    "percentile_25": -1.4525,
    "percentile_50": -0.30000000000000004,
    "percentile_75": 0.845
  }
}